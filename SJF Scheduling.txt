
#include<stdio.h>
#include<stdlib.h>
typedef struct
{
int pid;
int btime;
int wtime;
} sp;
int main()
{
int i, j, n, tbm = 0, towtwtime = 0, totttime;
sp p[10], t;
printf("\n sjf scheduling ..\n");
printf("enter the no of processes: ");
scanf("%d", &n);
printf("\n enter the burst time\n");
for (i = 0; i < n; i++)
{
printf("\n process %d\t", i + 1);
scanf("%d", &p[i].btime);
p[i].pid = i + 1;
p[i].wtime = 0;
}
for (i = 0; i < n; i++)
for (j = i + 1; j < n; j++) // Corrected loop initialization
{
if (p[i].btime > p[j].btime)
{
t = p[i];
p[i] = p[j];
p[j] = t;
}
}
printf("\n process scheduling\n");
printf("\n process \tburst time \twaiting time\n");
for (i = 0; i < n; i++)
{
towtwtime += p[i].wtime = tbm;
tbm += p[i].btime;
printf("\n%d\t\t%d\t\t%d", p[i].pid, p[i].btime, p[i].wtime);
}
totttime = tbm + towtwtime;
printf("\n total waiting time: %d", towtwtime);
printf("\n average waiting time: %f", (float)towtwtime / n);
printf("\n total turn around time: %d", totttime);
printf("\n average turn around time: %f", (float)totttime / n);
return 0;
}
