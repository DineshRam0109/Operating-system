
#include<stdio.h>
#include<stdlib.h>
struct rr
{
int pno, btime, sbtime, wtime, lst;
} p[10];
int main()
{
int pp = -1, ts, flag, count, ptm = 0, i, n, twt = 0, totttime = 0;
printf("\n round robin scheduling............");
printf("enter no of processes:");
scanf("%d", &n);
printf("enter the time slice:");
scanf("%d", &ts);
printf("enter the burst time");
for(i = 0; i < n; i++)
{
printf("\n process%d\t", i + 1);
scanf("%d", &p[i].btime);
p[i].wtime = p[i].lst = 0;
p[i].pno = i + 1;
p[i].sbtime = p[i].btime;
}
printf("scheduling....\n");
do
{
flag = 0;
for(i = 0; i < n; i++)
{
if(p[i].sbtime > 0)
{
flag = 1;
count = (p[i].sbtime >= ts) ? ts : p[i].sbtime;
printf("\n process %d from %d to %d", p[i].pno, ptm, ptm + count);
ptm += count;
p[i].sbtime -= count;
if(pp != i)
{
pp = i;
for(int j = 0; j < n; j++)
{
if(j != i && p[j].sbtime > 0)
{
p[j].wtime += count;
}
}
p[i].lst = ptm;
}
}
}
} while(flag);
printf("\n\nProcess\tWaiting Time");
for(i = 0; i < n; i++)
{
printf("\n%d\t\t%d", p[i].pno, p[i].wtime);
twt += p[i].wtime;
totttime += p[i].wtime + p[i].btime;
}
printf("\nTotal Waiting Time: %d", twt);
printf("\nAverage Waiting Time: %.2f", (float)twt / n);
printf("\nTotal Turnaround Time: %d", totttime);
printf("\nAverage Turnaround Time: %.2f\n", (float)totttime / n);
return 0;
}
